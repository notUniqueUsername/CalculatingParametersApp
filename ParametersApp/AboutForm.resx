<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>2.	Сычев А.Н. Синтез идеального фазового отношения для ответвителей на связанных линиях по заданному типу направленности / А.Н. Сычев, С.М. Стручков, Н.Ю. Рудый // Доклады ТУСУР. – 2017. – Т. 20, № 2. – С. 15–18. (DOI: 10.21293/1818-0442-2017-20-2-15-18). </value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>4.	Сычев А.Н. Параметры несимметричных связанных линий с неоднородным диэлектриком / А.Н. Сычев, Рудый Н.Ю. // Доклады ТУСУР. – 2018. – Т. 21, № 4-1. – C. 7–15. ( DOI: 10.21293/1818-0442-2018-21-4-1-7-15).</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>6.	Сычев А.Н. Модальные параметры неодинаковых связанных линий / А.Н.Сычев, В.В. Анисимов, В.А. Бондарь, К.Б.-Б.Дагба, А.И. Степанюга // Доклады ТУСУР. – 2020. – Т. 23, № 3. – С. 26–30. (DOI: 10.21293/1818-0442-2020-23-3-26-30).</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>7.	Сычев А.Н. Связанные линии с двойным экраном для СВЧ-мостов различного типа направленности с трансформирующими свойствами / А.Н.Сычев, В.А.Бондарь, К.К.Жаров, В.В. Анисимов, К.Б.-Б. Дагба, А.И. Степанюга // Доклады ТУСУР. – 2020. – Т. 23, № 3. – С. 13–25. (DOI: 10.21293/1818-0442-2020-23-3-13-25).</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMC8AAAEACABwDgAAFgAAACgAAAAwAAAAXgAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wAAAAAA/wAAgAAAgICAAMDAwAAA//8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgICAgYGBgYGBgICAgIGBgcC
        AgICAgcGBgYCAgICAgICAgIGAgICBgYGBgYGBgYGBgYCAgYGBgYGBgICAgYGBQICAgICAgICBgYCAgIC
        AgICAgIGAgICBgYGBgYGBgYGBgYCAgYGBgYGBgICAgYCAgIFBwYGBwICBgYCAgIGBgYGBgYGAgICBgYG
        BgYGBgYGBgYEAgcGBgYGAgICBgYCAgcGBgYGBgICBgYCAgIGBgYGBgYGAgICBgYGBgYGBgYGBgYFAgIC
        AgICAgICBgICAgYGBgYGBgYGBgYCAgIGBgYGBgYGAgICBgYGBgYGBgYGBgYHAgICAgICAgICBgICAgYG
        BgYGBgYGBgYCAgIGBgYGBgYGAgICBgYGBgYGBgYGBgYGBAIHBgYCAgIGBgICAgYGBgYGBgYGBgYCAgIG
        BgYGBgYGAgICAgIEAgcGBgYGBgYGBQIFBgYCAgIGBgICAgYGBgYGBgYGBgYCAgIGBgYGBgYGAgICAgIC
        AgIFBgYGBgYGBwIFBgICAgcGBgICAgYGBgYGBgYGBgYCAgIGBgYGBgYGAgICBgYHBwICBwYGBgYGBgIC
        BgICAgYGBgICAgYGBgYGBgYGBgYCAgIGBgYGBgYGAgICBgYGBgICBQYGBgYGBgUCBwICAgYGBgUCAgYG
        BgYGBgYGBgYCAgIGBgYGBgYGAgICBgYGBgICAgYGBgYGBgcCAgICBwYGBgcCAgcGBgYGBgICBgYCAgIG
        BgYGBgYGAgICBgYGBgICAgYGBgYGBgYCAgICBgYGBgYFAgIFBwYGAgICBgYCAgIGBgYGBgYGAgICBgYG
        BwICBgYGBgYGBgYFAgICBgYGBgYGBgICAgICAgICBgYCAgIGBgYGBgYGAgICAgICAgICBgYGBgYGBgYG
        AgIGBgYGBgYGBgYGAgICAgYGBgYCAgIGBgYGBgYGAgICAgICAgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgAAAAAABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYA
        AAAAAAYGBgAAAAAABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYAAAAAAAYGBgYGAAYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAGBgYGBgYGAAYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAGBgYGBgYGAAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgAGBgYGBgYAAAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgAABgYGBgAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGAAYGBgAGBgAG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGAAYGAAYGBgYAAAYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGAAYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgEBAQEBAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQYGBgYGBgYGBgYBAQYG
        BgEDAwMDAwMDAwMDAwMDAwADAwMDAwMDAwMDAwMDAwMDAQYGBgEBBgYGBgEGBgEBAQEDAwMDAwMDAwMD
        AwMDAwADAwMDAwMDAwMDAwMDAwMDAQEBAQYGAQYGBgEGBgEGBgEDAwMDAwMDAwMDAwMDAAMDAwMDAwMD
        AwMDAwMDAwMDAQYGAQYGAQYGBgYBAQYGBgEDAwMDAwMDAwMDAwMDAAMDAwMDAwMDAwMDAwMDAwMDAQYG
        BgEBBgYGBgYGBgYGBgEBAQEBAQEBAQEBAQEBAAEBAQEBAQEBAQEBAQEBAQEBAQYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGAAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGAAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYBAQYGBgEBAQEBAQEBAQEBAQEBAAEBAQEBAQEB
        AQEBAQEBAQEBAQYGBgEBBgYGBgEGBgEBAQEDAwMDAwMDAwMDAwMDAwADAwMDAwMDAwMDAwMDAwMDAQEB
        AQYGAQYGBgEGBgEGBgEDAwMDAwMDAwMDAwMDAwADAwMDAwMDAwMDAwMDAwMDAQYGAQYGAQYGBgYBAQYG
        BgEBAQEBAQEBAQEBAQEBAQEAAQEAAQEBAQEBAQEBAQEBAQYGBgEBBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGAAYABgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAABgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYAAAAAAAYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYAAAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgAGBgYGBgYGBgYGBgYGBgYGBgYGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>